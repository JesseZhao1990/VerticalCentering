{
  "name": "Verticalcentering",
  "tagline": "垂直居中的方法总结",
  "body": "## css垂直居中的几个方法的总结\r\n在实际的开发中，垂直居中一个元素一直以来都不是那么好搞定。今天总结7种常用的方法\r\n\r\n### 1. 针对单行文本可以用line-height\r\n\r\n\t 当height的值和line-height的值相等时。文本就居中了（仅仅适用于单行文本）\r\n\t \r\n**html**\r\n``` \r\n    <div id=\"parent\">\r\n\t\t<div id=\"child\">\r\n\t\t\tLine-Height Method For Vertical Centering With CSS\r\n\t\t</div>\r\n\t</div>\r\n```  \r\n**css**\r\n```\r\n\t#parent{\r\n\t\theight: 200px;     \r\n\t\tborder:1px solid #000;   //不是必须，仅仅是为了演示\r\n\t}\r\n\t#child{\r\n\t\tline-height: 200px;\r\n\t}\r\n```\r\n\r\n### 2. 设置display为table的方法\r\n\r\n\t 把父元素的display设置为table。子元素的display设置为table-cell\r\n\t \r\n**html**\r\n``` \r\n    <div id=\"parent\">\r\n\t\t<div id=\"child\">\r\n\t\t\ttable Method For Vertical Centering With CSS\r\n\t\t</div>\r\n\t</div>\r\n```  \r\n**css**\r\n```\r\n\t#parent {\r\n\t\t\tdisplay: table;\r\n\t\t\tborder:1px solid #000;\r\n\t\t\theight: 500px;\r\n\t\t}\r\n\t#child {\r\n\t\tdisplay: table-cell;\r\n\t\tvertical-align: middle;\r\n\t}\r\n```  \r\n### 3. 绝对定位和负边距\r\n\r\n\t 利用绝对定位先向下移动父元素高度的50%。再利用负边距往上移动自身高度的50%\r\n\t \r\n**html**\r\n``` \r\n    <div id=\"parent\">\r\n\t\t<div id=\"child\">\r\n\t\t\tVertical Centering With CSS\r\n\t\t</div>\r\n\t</div>\r\n```  \r\n**css**\r\n```\r\n#parent {\r\n\tposition: relative;\r\n\theight: 500px;\r\n\tborder:1px solid #000;\r\n}\r\n#child {\r\n\tposition: absolute;\r\n\ttop: 50%;\r\n\theight: 30%;\r\n\tmargin-top: -15%;\r\n}\r\n```  \r\n### 4. 绝对定位和拉伸元素\r\n\r\n\t 子元素利用绝对定位同时设置top和bottom充满父元素。然后再设置height\r\n\t \r\n**html**\r\n``` \r\n    <div id=\"parent\">\r\n\t\t<div id=\"child\">\r\n\t\t\tVertical Centering With CSS\r\n\t\t</div>\r\n\t</div>\r\n```  \r\n**css**\r\n```\r\n#parent {position: relative;}\r\n\r\n#child {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    width: 50%;\r\n    height: 30%;\r\n    margin: auto;\r\n}\r\n```      \r\n### 5. 设置相等的上边内边距\r\n\r\n\t 设置相等的上边内边距\r\n\t \r\n**html**\r\n``` \r\n    <div id=\"parent\">\r\n\t\t<div id=\"child\">\r\n\t\t\tVertical Centering With CSS\r\n\t\t</div>\r\n\t</div>\r\n```  \r\n**css**\r\n```\r\n#parent {\r\n    padding: 5% 0;\r\n}\r\n\r\n#child {\r\n    padding: 10% 0;\r\n}\r\n```      \r\n### 6. 浮动的方法\r\n\r\n\t 让floater浮动。占据父元素的一半高，然后清除浮动。然后让floater的下边距为负的子元素的高度的一半\r\n\t \r\n**html**\r\n``` \r\n<div id=\"parent\">\r\n    <div id=\"floater\"></div>\r\n    <div id=\"child\">Vertical Centering With CSS</div>\r\n</div>\r\n```  \r\n**css**\r\n```\r\n#parent {height: 250px;}\r\n\r\n#floater {\r\n    float: left;\r\n    height: 50%;\r\n    width: 100%;\r\n    margin-bottom: -50px;\r\n}\r\n\r\n#child {\r\n    clear: both;\r\n    height: 100px;\r\n}\r\n```    \r\n### 7. flex box\r\n\r\n\t 利用弹性盒[详情](http://www.w3cplus.com/css3/a-guide-to-flexbox.html)\r\n\t \r\n**html**\r\n``` \r\n<div id=\"parent\">\r\n    <div id=\"child\">Vertical Centering With CSS</div>\r\n</div>\r\n```  \r\n**css**\r\n```\r\n#parent {height: 250px;}\r\n#child {\r\n   \r\n}\r\n```    \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}